DO $$
BEGIN
  -- Check if the table exists
  IF NOT EXISTS (SELECT 1 FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name = 'glazing_panel_requirements') THEN
    RAISE NOTICE 'Table glazing_panel_requirements does not exist. Creating new table...';
    
    -- Create the table with the desired schema
    CREATE TABLE glazing_panel_requirements (
      id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      model TEXT NOT NULL,
      width NUMERIC NOT NULL,
      eave_height NUMERIC NOT NULL,
      section TEXT NOT NULL,
      bay TEXT,
      vent_type TEXT,
      material_type TEXT NOT NULL,
      panel_quantity NUMERIC NOT NULL,
      panel_length TEXT NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );
    
    RAISE NOTICE 'New table glazing_panel_requirements created successfully';
    
    -- Add comments
    COMMENT ON TABLE glazing_panel_requirements IS 'Stores glazing panel requirements for different greenhouse models and configurations';
    COMMENT ON COLUMN glazing_panel_requirements.model IS 'Greenhouse model identifier';
    COMMENT ON COLUMN glazing_panel_requirements.width IS 'Width of the greenhouse section';
    COMMENT ON COLUMN glazing_panel_requirements.eave_height IS 'Height at the eave';
    COMMENT ON COLUMN glazing_panel_requirements.section IS 'Section of the greenhouse (e.g., roof, wall)';
    COMMENT ON COLUMN glazing_panel_requirements.bay IS 'Bay identifier if applicable';
    COMMENT ON COLUMN glazing_panel_requirements.vent_type IS 'Type of vent if applicable';
    COMMENT ON COLUMN glazing_panel_requirements.material_type IS 'Type of material (e.g., glass, polycarbonate)';
    COMMENT ON COLUMN glazing_panel_requirements.panel_quantity IS 'Number of panels required';
    COMMENT ON COLUMN glazing_panel_requirements.panel_length IS 'Length of each panel';
    
    -- Skip the rest of the migration since we've already created the table with the correct schema
    RAISE NOTICE 'Migration completed successfully!';
    RETURN;
  ELSE
    RAISE NOTICE 'Table glazing_panel_requirements exists. Proceeding with migration...';
  END IF;
  
  -- Create backup of existing table
  RAISE NOTICE 'Creating backup of glazing_panel_requirements...';
  CREATE TABLE IF NOT EXISTS glazing_panel_requirements_backup AS 
    SELECT * FROM glazing_panel_requirements;
    
  RAISE NOTICE 'Backup created as glazing_panel_requirements_backup';
  
  -- Check and add width column if it doesn't exist
  IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                 WHERE table_name = 'glazing_panel_requirements' 
                 AND column_name = 'width') THEN
    ALTER TABLE glazing_panel_requirements ADD COLUMN width NUMERIC DEFAULT 0 NOT NULL;
    RAISE NOTICE 'Added missing width column';
  END IF;
  
  -- Rename columns if they exist
  IF EXISTS (SELECT 1 FROM information_schema.columns 
             WHERE table_name = 'glazing_panel_requirements' 
             AND column_name = 'eave_width') THEN
    ALTER TABLE glazing_panel_requirements RENAME COLUMN eave_width TO eave_height;
    RAISE NOTICE 'Renamed column eave_width to eave_height';
  END IF;
  
  IF EXISTS (SELECT 1 FROM information_schema.columns 
             WHERE table_name = 'glazing_panel_requirements' 
             AND column_name = 'requirement_value') THEN
    ALTER TABLE glazing_panel_requirements RENAME COLUMN requirement_value TO panel_quantity;
    RAISE NOTICE 'Renamed column requirement_value to panel_quantity';
  END IF;
  
  IF EXISTS (SELECT 1 FROM information_schema.columns 
             WHERE table_name = 'glazing_panel_requirements' 
             AND column_name = 'requirement_unit') THEN
    ALTER TABLE glazing_panel_requirements RENAME COLUMN requirement_unit TO panel_length;
    RAISE NOTICE 'Renamed column requirement_unit to panel_length';
  END IF;

  -- Make sure all required columns exist
  IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                 WHERE table_name = 'glazing_panel_requirements' 
                 AND column_name = 'model') THEN
    ALTER TABLE glazing_panel_requirements ADD COLUMN model TEXT DEFAULT 'Unknown' NOT NULL;
    RAISE NOTICE 'Added missing model column';
  END IF;
  
  IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                 WHERE table_name = 'glazing_panel_requirements' 
                 AND column_name = 'section') THEN
    ALTER TABLE glazing_panel_requirements ADD COLUMN section TEXT DEFAULT 'Unknown' NOT NULL;
    RAISE NOTICE 'Added missing section column';
  END IF;
  
  IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                 WHERE table_name = 'glazing_panel_requirements' 
                 AND column_name = 'material_type') THEN
    ALTER TABLE glazing_panel_requirements ADD COLUMN material_type TEXT DEFAULT 'Unknown' NOT NULL;
    RAISE NOTICE 'Added missing material_type column';
  END IF;
  
  -- Ensure nullable fields exist
  IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                 WHERE table_name = 'glazing_panel_requirements' 
                 AND column_name = 'bay') THEN
    ALTER TABLE glazing_panel_requirements ADD COLUMN bay TEXT;
    RAISE NOTICE 'Added missing bay column';
  END IF;
  
  IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                 WHERE table_name = 'glazing_panel_requirements' 
                 AND column_name = 'vent_type') THEN
    ALTER TABLE glazing_panel_requirements ADD COLUMN vent_type TEXT;
    RAISE NOTICE 'Added missing vent_type column';
  END IF;

  -- Create a new table with the desired column order
  RAISE NOTICE 'Creating new table with updated schema...';
  
  CREATE TABLE glazing_panel_requirements_new (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    model TEXT NOT NULL,
    width NUMERIC NOT NULL,
    eave_height NUMERIC NOT NULL,
    section TEXT NOT NULL,
    bay TEXT,
    vent_type TEXT,
    material_type TEXT NOT NULL,
    panel_quantity NUMERIC NOT NULL,
    panel_length TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
  );

  -- Simple direct insert with consistent column order
  INSERT INTO glazing_panel_requirements_new (
    id, model, width, eave_height, section, bay, vent_type, material_type,
    panel_quantity, panel_length, created_at, updated_at
  )
  SELECT 
    id, 
    model, 
    width, 
    COALESCE(eave_height, 0) as eave_height,
    section, 
    bay, 
    vent_type, 
    material_type,
    COALESCE(panel_quantity, 0) as panel_quantity, 
    COALESCE(panel_length, '') as panel_length, 
    COALESCE(created_at, NOW()) as created_at, 
    COALESCE(updated_at, NOW()) as updated_at
  FROM glazing_panel_requirements;

  -- Replace old table with new one
  RAISE NOTICE 'Replacing old table with new version...';
  
  DROP TABLE glazing_panel_requirements;
  ALTER TABLE glazing_panel_requirements_new RENAME TO glazing_panel_requirements;

  -- Add comments
  COMMENT ON TABLE glazing_panel_requirements IS 'Stores glazing panel requirements for different greenhouse models and configurations';
  COMMENT ON COLUMN glazing_panel_requirements.model IS 'Greenhouse model identifier';
  COMMENT ON COLUMN glazing_panel_requirements.width IS 'Width of the greenhouse section';
  COMMENT ON COLUMN glazing_panel_requirements.eave_height IS 'Height at the eave';
  COMMENT ON COLUMN glazing_panel_requirements.section IS 'Section of the greenhouse (e.g., roof, wall)';
  COMMENT ON COLUMN glazing_panel_requirements.bay IS 'Bay identifier if applicable';
  COMMENT ON COLUMN glazing_panel_requirements.vent_type IS 'Type of vent if applicable';
  COMMENT ON COLUMN glazing_panel_requirements.material_type IS 'Type of material (e.g., glass, polycarbonate)';
  COMMENT ON COLUMN glazing_panel_requirements.panel_quantity IS 'Number of panels required';
  COMMENT ON COLUMN glazing_panel_requirements.panel_length IS 'Length of each panel';
  
  -- Show final table structure
  RAISE NOTICE 'Migration completed successfully!';
  
  -- Get and display table structure using a simpler approach
  RAISE NOTICE 'Final table structure:';
  RAISE NOTICE '---------------------';
  
  -- Use a simpler approach to show table structure
  RAISE NOTICE 'id: BIGINT PRIMARY KEY';
  RAISE NOTICE 'model: TEXT NOT NULL';
  RAISE NOTICE 'width: NUMERIC NOT NULL';
  RAISE NOTICE 'eave_height: NUMERIC NOT NULL';
  RAISE NOTICE 'section: TEXT NOT NULL';
  RAISE NOTICE 'bay: TEXT';
  RAISE NOTICE 'vent_type: TEXT';
  RAISE NOTICE 'material_type: TEXT NOT NULL';
  RAISE NOTICE 'panel_quantity: NUMERIC NOT NULL';
  RAISE NOTICE 'panel_length: TEXT NOT NULL';
  RAISE NOTICE 'created_at: TIMESTAMP WITH TIME ZONE DEFAULT NOW()';
  RAISE NOTICE 'updated_at: TIMESTAMP WITH TIME ZONE DEFAULT NOW()';
  
  RAISE NOTICE '--------------------------------------------------';
  RAISE NOTICE 'A backup of the original table is available as: glazing_panel_requirements_backup';
  RAISE NOTICE 'You can drop it after verifying the migration with: DROP TABLE glazing_panel_requirements_backup;';
  
EXCEPTION WHEN OTHERS THEN
  RAISE WARNING 'Error in migration: %', SQLERRM;
  RAISE WARNING 'The original table is unchanged and a backup was created as glazing_panel_requirements_backup';
  RAISE;
END $$;